<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kurumi.mapper.StdOperationMapper" >
  <resultMap id="stdOperation" type="com.kurumi.pojo.StdOperation" >
    <id column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="alias_name" property="aliasName" jdbcType="VARCHAR" />
    <result column="alias_name_index" property="aliasNameIndex" jdbcType="VARCHAR" />
    <result column="index_code" property="indexCode" jdbcType="VARCHAR" />
    <result column="attributes_id" property="attributesId" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="std_ops_peration_mark_id" property="stdOpsPerationMarkId" jdbcType="INTEGER" />
    <result column="std_incision_level_id" property="stdIncisionLevelId" jdbcType="INTEGER" />
    <result column="std_ops_level_id" property="stdOpsLevelId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="std_region_code" property="stdRegionCode" jdbcType="VARCHAR" />
    <result column="std_province_code" property="stdProvinceCode" jdbcType="VARCHAR" />
    <result column="international_disease_version" property="interDiseaseVersion" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <select id="getStdOperations" resultMap = "stdOperation" parameterType="com.kurumi.query.BasicDataQuery">
  	select * from std_operation where 1=1
  	<if test="name!=null">
  	 	and name like CONCAT('%',#{name},'%')  
  	</if>
  	 <if test="code != null">
  	 	and code like CONCAT('%',#{code},'%')  
  	</if>
  	 <if test="indexCode != null">
  	 	and index_code like CONCAT('%',#{indexCode},'%') 
  	</if>
  	 limit #{currentStartNum},#{pageSize}
  </select>
  
   <select id="getCountByParams" parameterType="com.kurumi.query.BasicDataQuery" resultType="java.lang.Integer">
  	select count(*) from std_operation  where 1=1
   	<if test="name!=null">
  	 	and name like CONCAT('%',#{name},'%')  
  	</if>
  	 <if test="code != null">
  	 	and code like CONCAT('%',#{code},'%')  
  	</if>
  	 <if test="indexCode != null">
  	 	and index_code like CONCAT('%',#{indexCode},'%') 
  	</if>
  </select>
  
    <select id="selectByPrimaryKey" resultMap="stdOperation" parameterType="java.lang.String">
  	  	select * from std_operation where code=#{code}
  </select>
  
  
   <insert id="insert" parameterType="stdOperation" >
    insert into std_operation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="enName != null" >
        en_name,
      </if>
      <if test="aliasName != null" >
        alias_name,
      </if>
      <if test="aliasNameIndex != null" >
        alias_name_index,
      </if>
      <if test="indexCode != null" >
        index_code,
      </if>
      <if test="attributesId != null" >
        attributes_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="stdOpsPerationMarkId != null" >
        std_ops_peration_mark_id,
      </if>
      <if test="stdIncisionLevelId != null" >
        std_incision_level_id,
      </if>
      <if test="stdOpsLevelId != null" >
        std_ops_level_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="stdRegionCode != null" >
        std_region_code,
      </if>
      <if test="stdProvinceCode != null" >
        std_province_code,
      </if>
      <if test="interDiseaseVersion != null" >
        international_disease_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="aliasNameIndex != null" >
        #{aliasNameIndex,jdbcType=VARCHAR},
      </if>
      <if test="indexCode != null" >
        #{indexCode,jdbcType=VARCHAR},
      </if>
      <if test="attributesId != null" >
        #{attributesId,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="stdOpsPerationMarkId != null" >
        #{stdOpsPerationMarkId,jdbcType=INTEGER},
      </if>
      <if test="stdIncisionLevelId != null" >
        #{stdIncisionLevelId,jdbcType=INTEGER},
      </if>
      <if test="stdOpsLevelId != null" >
        #{stdOpsLevelId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stdRegionCode != null" >
        #{stdRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="stdProvinceCode != null" >
        #{stdProvinceCode,jdbcType=VARCHAR},
      </if>
      <if test="interDiseaseVersion != null" >
        #{interDiseaseVersion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
   <update id="updateByPrimaryKey" parameterType="stdOperation" >
    update std_operation
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        alias_name = #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="aliasNameIndex != null" >
        alias_name_index = #{aliasNameIndex,jdbcType=VARCHAR},
      </if>
      <if test="indexCode != null" >
        index_code = #{indexCode,jdbcType=VARCHAR},
      </if>
      <if test="attributesId != null" >
        attributes_id = #{attributesId,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
       		std_ops_peration_mark_id = #{stdOpsPerationMarkId,jdbcType=INTEGER},
       		std_incision_level_id = #{stdIncisionLevelId,jdbcType=INTEGER},
       		std_ops_level_id = #{stdOpsLevelId,jdbcType=INTEGER},
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stdRegionCode != null" >
        std_region_code = #{stdRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="stdProvinceCode != null" >
        std_province_code = #{stdProvinceCode,jdbcType=VARCHAR},
      </if>
      <if test="interDiseaseVersion != null" >
        international_disease_version = #{interDiseaseVersion,jdbcType=VARCHAR},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  
   <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete from std_operation where code=#{code}
  </delete>
  </mapper>