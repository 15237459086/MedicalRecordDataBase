<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kurumi.mapper.StdOperationMapper" >
  <resultMap id="BaseResultMap" type="com.kurumi.pojo.StdOperation" >
    <id column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="index_code" property="indexCode" jdbcType="VARCHAR" />
    <result column="alias_name" property="aliasName" jdbcType="VARCHAR" />
    <result column="alias_name_index" property="aliasNameIndex" jdbcType="VARCHAR" />
    
    <result column="operation_mark_code" property="operationMarkCode" jdbcType="VARCHAR" />
    <result column="operation_mark_name" property="operationMarkName" jdbcType="VARCHAR" />
    <result column="incision_level_code" property="incisionLevelCode" jdbcType="VARCHAR" />
    <result column="incision_level_name" property="incisionLevelName" jdbcType="VARCHAR" />
    <result column="operation_level_code" property="operationLevelCode" jdbcType="VARCHAR" />
    <result column="operation_level_name" property="operationLevelName" jdbcType="VARCHAR" />
    <result column="std_region_code" property="stdRegionCode" jdbcType="VARCHAR" />
    <result column="std_province_code" property="stdProvinceCode" jdbcType="VARCHAR" />
    <result column="international_disease_version" property="interDiseaseVersion" jdbcType="VARCHAR" />
    
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  
  
  <select id="getOperationByOperationQuery" resultType ="map" parameterType="com.kurumi.query.OperationQuery">
  	select * from std_operation where 1=1
  	<if test="name!=null">
  	 	and name like CONCAT('%',#{name},'%')  
  	</if>
  	 <if test="code != null">
  	 	and code like CONCAT('%',#{code},'%')  
  	</if>
  	 <if test="indexCode != null">
  	 	and index_code like CONCAT('%',#{indexCode},'%') 
  	</if>
  	order by code
  	<if test="currentStartNum != null and pageSize != null" >
     	limit #{currentStartNum},#{pageSize}
     </if>
  </select>
  
  <select id="getOperationCountByOperationQuery" parameterType="com.kurumi.query.OperationQuery" resultType="java.lang.Integer">
  	select count(*) from std_operation  where 1=1
   	<if test="name!=null">
  	 	and name like CONCAT('%',#{name},'%')  
  	</if>
  	 <if test="code != null">
  	 	and code like CONCAT('%',#{code},'%')  
  	</if>
  	 <if test="indexCode != null">
  	 	and index_code like CONCAT('%',#{indexCode},'%') 
  	</if>
  </select>
  
  
  <select id="getOperationCountByPrimaryKey" resultType="int" parameterType="java.lang.String">
  	  	select count(code) from std_operation where code=#{code}
  </select>
  
  
  <insert id="insert" parameterType="com.kurumi.pojo.StdOperation" >
    insert into std_operation
    <trim prefix="(" suffix=")" suffixOverrides="," >
        code,
        name,
        en_name,
        index_code,
        alias_name,
        alias_name_index,
        operation_mark_code,
        operation_mark_name,
        incision_level_code,
        incision_level_name,
        operation_level_code,
        operation_level_name,
        std_region_code,
        std_province_code,
        international_disease_version,
        comment,
        status,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{code,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{enName,jdbcType=VARCHAR},
        #{indexCode,jdbcType=VARCHAR},
        #{aliasName,jdbcType=VARCHAR},
        #{aliasNameIndex,jdbcType=VARCHAR},
        #{operationMarkCode,jdbcType=VARCHAR},
        #{operationMarkName,jdbcType=VARCHAR},
        #{incisionLevelCode,jdbcType=VARCHAR},
        #{incisionLevelName,jdbcType=VARCHAR},
        #{operationLevelCode,jdbcType=VARCHAR},
        #{operationLevelName,jdbcType=VARCHAR},
        #{stdRegionCode,jdbcType=VARCHAR},
        #{stdProvinceCode,jdbcType=VARCHAR},
        #{interDiseaseVersion,jdbcType=VARCHAR},
      	#{comment,jdbcType=VARCHAR},
      	#{status,jdbcType=INTEGER},
    </trim>
  </insert>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  	select * from std_operation where code=#{code}
  </select>
   <update id="updateByPrimaryKey" parameterType="stdOperation" >
    update std_operation
    <set >
        name = #{name,jdbcType=VARCHAR},
        en_name = #{enName,jdbcType=VARCHAR},
        index_code = #{indexCode,jdbcType=VARCHAR},
        alias_name = #{aliasName,jdbcType=VARCHAR},
        alias_name_index = #{aliasNameIndex,jdbcType=VARCHAR},
        
     	operation_mark_code = #{operationMarkCode,jdbcType=VARCHAR},
     	operation_mark_name = #{operationMarkName,jdbcType=VARCHAR},
     	incision_level_code = #{incisionLevelCode,jdbcType=VARCHAR},
     	incision_level_name = #{incisionLevelName,jdbcType=VARCHAR},
     	operation_level_code = #{operationLevelCode,jdbcType=VARCHAR},
        operation_level_name = #{operationLevelName,jdbcType=VARCHAR},
        std_region_code = #{stdRegionCode,jdbcType=VARCHAR},
        std_province_code = #{stdProvinceCode,jdbcType=VARCHAR},
        international_disease_version = #{interDiseaseVersion,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  
   <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
      delete from std_operation where code=#{code}
  </delete>
  
  
  </mapper>